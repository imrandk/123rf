let collectedData = [];
let isCollecting = false;
let observer;

function collectTableData() {
    const tableBody = document.querySelector('#upload-queue-table-body');
    if (!tableBody) return;

    tableBody.querySelectorAll('tr').forEach(row => {
        const rowData = Array.from(row.querySelectorAll('td')).map(cell => cell.textContent.trim()).join(' ');
        if (!collectedData.includes(rowData)) collectedData.push(rowData);
    });
}

function startObserving() {
    observer = new MutationObserver(() => {
        const tableBody = document.querySelector('#upload-queue-table-body');
        if (tableBody && isCollecting) collectTableData();
    });
    observer.observe(document.body, { childList: true, subtree: true });
}

function startCollecting() {
    if (isCollecting) return;
    isCollecting = true;
    collectedData = [];
    startObserving();
    collectTableData();
}

function stopCollecting() {
    isCollecting = false;
    if (observer) observer.disconnect();
    displayCollectedData();
}

function displayCollectedData() {
    const container = document.createElement('div');
    container.id = 'data-container';
    Object.assign(container.style, {
        position: 'fixed', top: '60px', left: '50%', transform: 'translateX(-50%)', width: '80%', maxWidth: '600px',
        backgroundColor: '#fff', padding: '20px', border: '2px solid #007BFF', borderRadius: '10px',
        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)', zIndex: '1000', overflowY: 'scroll', maxHeight: '80vh'
    });

    const textarea = document.createElement('textarea');
    textarea.value = collectedData.join('\n');
    Object.assign(textarea.style, {
        width: '100%', height: '200px', marginTop: '10px', padding: '10px', fontSize: '16px',
        border: '2px solid #007BFF', borderRadius: '5px', boxSizing: 'border-box'
    });
    container.appendChild(textarea);

    const copyButton = document.createElement('button');
    copyButton.textContent = 'Copy';
    Object.assign(copyButton.style, {
        marginTop: '10px', padding: '10px 20px', backgroundColor: '#007BFF', color: '#fff',
        border: 'none', borderRadius: '5px', cursor: 'pointer'
    });
    copyButton.addEventListener('click', () => {
        navigator.clipboard.writeText(textarea.value).then(() => document.body.removeChild(container));
    });
    container.appendChild(copyButton);

    const lineCount = document.createElement('p');
    lineCount.textContent = `Total lines collected: ${collectedData.length}`;
    Object.assign(lineCount.style, { marginTop: '10px', fontSize: '14px', color: '#333' });
    container.appendChild(lineCount);

    document.body.appendChild(container);
}

const controlPanel = document.createElement('div');
controlPanel.id = 'control-panel';
Object.assign(controlPanel.style, {
    position: 'fixed', top: '10px', left: '50%', transform: 'translateX(-50%)', backgroundColor: '#fff',
    padding: '10px', border: '1px solid #ccc', borderRadius: '5px', boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',
    zIndex: '1001', display: 'flex', gap: '10px'
});

const startButton = document.createElement('button');
startButton.textContent = 'Start Collecting';
Object.assign(startButton.style, {
    padding: '10px 20px', backgroundColor: '#28a745', color: '#fff', border: 'none',
    borderRadius: '5px', cursor: 'pointer'
});
startButton.addEventListener('click', startCollecting);

const stopButton = document.createElement('button');
stopButton.textContent = 'Stop and Show Data';
Object.assign(stopButton.style, {
    padding: '10px 20px', backgroundColor: '#dc3545', color: '#fff', border: 'none',
    borderRadius: '5px', cursor: 'pointer'
});
stopButton.addEventListener('click', stopCollecting);

controlPanel.appendChild(startButton);
controlPanel.appendChild(stopButton);
document.body.appendChild(controlPanel);
